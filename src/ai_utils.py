import streamlit as st
from openai import OpenAI
import json

# function call 
analysis_tool_schema = {
    "type": "function",
    "function": {
        "name": "analyze_screenshot_content",
        "description": "Analyzes OCR text from a mobile screenshot in two steps: objective data analysis and creative user profiling.",
        "parameters": {
            "type": "object",
            "properties": {
                "data_analysis_results": {
                    "type": "object",
                    "description": "Step 1: Objective information extracted by the Data Analyst.",
                    "properties": {
                        "content_type": {
                            "type": "string",
                            "description": "스크린샷 콘텐츠의 유형을 분류합니다. (예: 소셜 미디어, 메신저, 쇼핑, 웹 검색 결과)",
                            "enum": ["소셜 미디어", "메신저", "쇼핑", "웹 검색 결과", "영수증", "예매내역", "시간표", "기타"]
                        },
                        "main_topics": {
                            "type": "array",
                            "items": {"type": "string"},
                            "description": "스크린샷의 전체 내용을 한 단어 또는 구로 요약하는 가장 핵심적인 주제 최대 3개 (예: 맛집, 코딩, 쇼핑)"
                        },
                        "entities": {
                            "type": "array",
                            "items": {"type": "string"},
                            "description": "언급된 주요 고유 명사(장소, 브랜드, 인물, 제품명 등). 가장 중요한 순서대로 최대 5개까지 추출합니다."
                        },
                        "keywords": {
                            "type": "array",
                            "items": {"type": "string"},
                            "description": "콘텐츠를 이해하는 데 도움이 되는 핵심 키워드(고유 명사 제외). 관련성 높은 순서대로 최대 5개까지 추출합니다."
                        }
                    },
                    "required": ["content_type", "main_topics", "entities", "keywords"]
                },
                "creative_profiling_results": {
                    "type": "object",
                    "description": "Step 2: Inferred insights generated by the Creative Profiler based on Step 1 results.",
                    "properties": {
                        "inferred_user_interests": {
                            "type": "array",
                            "items": {"type": "string"},
                            "description": "추출된 정보를 바탕으로 추론한 사용자의 잠재적 관심사 또는 취향. (예: '맛집' 정보에서 '인스타그래머블한 공간 경험'을 추론)"
                        },
                        "new_tag_suggestions": {
                            "type": "array",
                            "items": {"type": "string"},
                            "description": "사용자가 생각지 못했을 창의적이고 새로운 추천 태그. 가장 핵심적인 태그를 최대 3개까지만 해시태그 형식으로 제안합니다. (예: #성수동감성투어)"
                        },
                        "profiler_summary": {
                            "type": "string",
                            "description": "분석 결과를 종합하여 프로파일러로서 사용자의 관심사나 취향에 대해 1~2 문장으로 요약합니다."
                        }
                    },
                    "required": ["inferred_user_interests", "new_tag_suggestions", "profiler_summary"]
                }
            },
            "required": ["data_analysis_results", "creative_profiling_results"]
        }
    }
}


def analyze_text_with_gpt(text):
    
    # error 처리
    if not text or not text.strip():
        return {"error": "분석할 텍스트가 없습니다."}

    try:
        client = OpenAI(api_key=st.secrets["openai"]["api_key"])

        # 프롬프트
        messages = [
            {
                "role": "system",
                "content": """You are an expert analyst who performs a two-step analysis on raw text. **Key Context:** The user is **Korean**, and the text will be predominantly in **Korean**. The text is extracted from a user's **mobile screen capture** via OCR. Therefore, it may contain UI elements, noise, or formatting errors. Assume the content is likely from **social media, messaging, shopping apps, or mobile web search results.** **Step 1: As a 'Data Analyst',** meticulously extract objective information from the main content.
                
                **Step 2: As a 'Creative Profiler',** use only the extracted information from Step 1 to infer the user's hidden interests, considering Korean cultural context and trends. You **must** perform both steps and return the complete result **by calling the provided function tool**. Do not respond in any other format."""
            },
            {
                "role": "user",
                "content": f"""Please analyze the following text extracted via OCR from a user's screenshot and return the results using the 'analyze_screenshot_content' function.
                --- OCR TEXT START---
                {text}
                --- OCR TEXT END ---"""
            }
        ]

        response = client.chat.completions.create(
            model="gpt-3.5-turbo",
            messages=messages,
            tools=[analysis_tool_schema],
            tool_choice={"type": "function", "function": {"name": "analyze_screenshot_content"}}
        )

        # 결과 파싱
        result_json = response.choices[0].message.tool_calls[0].function.arguments
        st.success("GPT 구조화 분석 성공")
        return json.loads(result_json)

    except Exception as e:
        st.error(f"GPT 처리 중 오류 발생: {e}")
        return None
